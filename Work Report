
Sentiment Analysis Work Report - Ido Kedem:


26.8
    13:00 - 15:00 Finding the right API
        1. Experimented with OpenAI's API:
            - Had to find a different solution since its no loger free

        2. Experimented with SentenceTransformers:
            - Had trouble installing Torch
            - After managing to use the api I found its not so user friendly

        3. Experimented with Groq:
            - Had trouble setting the API Key as an environment variable, decided in
            the meantime to read it from a text file (api key.txt)
            - Easy to use, and provides an in-depth sentiment analysis of text using
            a relatively simple prompt ("Analyze the sentiment of the following sentence:")

        NEXT STEP:
            - Create an interface for easy usage (for users) and testing (for myself)

    13:45 - 17:15 Creating a UI
        1. Choosing and using a UI:
            - Even though i am sure of my Tkinter skills I chose to use Flask for this project,
              which is also my first time using it. I decided to use flask since web development is
              an important tool for me to have as a part of my repertoire.
            - With the help of ChatGPT i generated html and css files that fit my needs, linked them to a python
              backend and implemented in it a sentiment analysis using Groq.
        NEXT STEP:
            - Further test groq, and improve the instructions i gave him (system prompts)
29.8
    17:30 - 18:00 Perfecting system prompts
        1. Prompt Engineering:
            - In order to perfect my system prompt (instructions) i decided to look up
              prompt engineering tips online. i used tips from Youtube, OpenAI and past
              experience i had.
            - I implemented these tips in my backend code and now the output is highly
              elaborative. I exclusively asked the LLM to refer to contrasting sentiments
              and explain them. I also asked it to provide a summary of the analysis.
            NOTE: Although i did not spend as much time as i expected in configuring
                  system prompts, it seems to me that I have reached sufficient
                  results relative to this project's size.
            NEXT STEP:
                - Test Groq with ambiguous inputs, such as neutral texts, nonsense, typos etc.